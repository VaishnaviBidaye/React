{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React\\\\18 Next JS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n; // always run on server    \n// used when needed concret request object \n// used when data changes every second (frequently)\n// export async function getServerSideProps(context) {\n//     // fetch data from an API\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n// runs at the time of build        - Better and Faster\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // re-generate page after every 1 sec\n    revalidate: 1\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React/18 Next JS/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","Head","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAE,aADV;AAEI,QAAA,OAAO;AAFX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;AAAA,C,CAGD;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AAEA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AASH;AACAC,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AAAA;AAED,eAAepB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\nimport Head from 'next/head';\r\nimport { Fragment } from 'react';\r\n\r\n\r\nfunction HomePage(props) {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>React Meetups</title>\r\n                <meta\r\n                    name= 'description'\r\n                    content\r\n                />\r\n            </Head>\r\n            <MeetupList meetups={props.meetups} />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\n// always run on server    \r\n// used when needed concret request object \r\n// used when data changes every second (frequently)\r\n\r\n// export async function getServerSideProps(context) {\r\n//     // fetch data from an API\r\n\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// runs at the time of build        - Better and Faster\r\n\r\nexport async function getStaticProps() {\r\n    // fetch data from an API\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString()\r\n            }))\r\n        },\r\n        // re-generate page after every 1 sec\r\n        revalidate: 1\r\n    };\r\n};\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}