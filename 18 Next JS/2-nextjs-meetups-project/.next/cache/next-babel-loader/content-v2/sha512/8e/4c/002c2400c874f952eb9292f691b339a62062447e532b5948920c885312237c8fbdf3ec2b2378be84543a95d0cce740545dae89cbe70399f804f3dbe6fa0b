{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React\\\\18 Next JS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: '12, City',\n  description: 'First meetup'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: '34, City',\n  description: 'Second meetup'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n; // always run on server    \n// used when needed concret request object \n// used when data changes every second (frequently)\n// export async function getServerSideProps(context) {\n//     // fetch data from an API\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n// runs at the time of build        - Better and Faster\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toS\n      }))\n    },\n    // re-generate page after every 10 secs\n    revalidate: 10\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React/18 Next JS/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toS","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,gFAHX;AAIIC,EAAAA,OAAO,EAAE,UAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EAAE,gFAHX;AAIIC,EAAAA,OAAO,EAAE,UAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,sBAEI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIH;;AAAA,C,CAGD;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AAEA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFY;AAG5BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHc;AAI5BF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC;AAJa,OAAL,CAAlB;AADN,KADJ;AASH;AACAC,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AAAA;AAED,eAAehB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 'm1',\r\n        title: 'A First Meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n        address: '12, City',\r\n        description: 'First meetup'\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'A Second Meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n        address: '34, City',\r\n        description: 'Second meetup'\r\n    }\r\n];\r\n\r\nfunction HomePage(props) {\r\n    \r\n    return (\r\n        \r\n        <MeetupList meetups={props.meetups} />\r\n    );\r\n};\r\n\r\n\r\n// always run on server    \r\n// used when needed concret request object \r\n// used when data changes every second (frequently)\r\n\r\n// export async function getServerSideProps(context) {\r\n//     // fetch data from an API\r\n\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// runs at the time of build        - Better and Faster\r\n\r\nexport async function getStaticProps() {\r\n    // fetch data from an API\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toS\r\n            }))\r\n        },\r\n        // re-generate page after every 10 secs\r\n        revalidate: 10\r\n    };\r\n};\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}