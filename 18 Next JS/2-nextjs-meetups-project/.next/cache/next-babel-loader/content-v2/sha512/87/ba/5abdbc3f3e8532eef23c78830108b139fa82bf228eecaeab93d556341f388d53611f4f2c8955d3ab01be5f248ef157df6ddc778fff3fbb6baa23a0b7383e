{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React\\\\18 Next JS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First\",\n    address: \"12,city\",\n    description: \"first\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    // to indicate supported pass\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  // fetch data from single meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n        id: meetupId,\n        title: 'First',\n        address: '12,city',\n        description: 'first'\n      }\n    }\n  };\n}\n;\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React/18 Next JS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAGA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAE,gFADX;AAEI,IAAA,KAAK,EAAE,OAFX;AAGI,IAAA,OAAO,EAAE,SAHb;AAII,IAAA,WAAW,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAAA;AAGD,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAGA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AACqB;AACxBC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAQH;AAAA;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACHI,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,gFADC;AAERC,QAAAA,EAAE,EAAEP,QAFI;AAGRQ,QAAAA,KAAK,EAAE,OAHC;AAIRC,QAAAA,OAAO,EAAE,SAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAAA;AAGD,eAAe1B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\n\r\nfunction MeetupDetails() {\r\n    return (\r\n        <MeetupDetail \r\n            image= 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg'\r\n            title= 'First'\r\n            address= '12,city'\r\n            description= 'first'\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n    \r\n    return {\r\n        fallback: false,        // to indicate supported pass\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            },\r\n        })),           \r\n    };\r\n};\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data from single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n                id: meetupId,\r\n                title: 'First',\r\n                address: '12,city',\r\n                description: 'first',\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}