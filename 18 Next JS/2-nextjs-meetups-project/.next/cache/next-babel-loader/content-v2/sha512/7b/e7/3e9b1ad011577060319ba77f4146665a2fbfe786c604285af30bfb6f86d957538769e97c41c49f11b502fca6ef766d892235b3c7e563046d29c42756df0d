{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React\\\\18 Next JS\\\\2-nextjs-meetups-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\n;\n;\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/React/18 Next JS/2-nextjs-meetups-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","Head","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAE,aADV;AAEI,QAAA,OAAO,EAAGF,KAAK,CAACC,UAAN,CAAiBE;AAF/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAGH,KAAK,CAACC,UAAN,CAAiBG,KAD7B;AAEI,MAAA,KAAK,EAAGJ,KAAK,CAACC,UAAN,CAAiBC,KAF7B;AAGI,MAAA,OAAO,EAAIF,KAAK,CAACC,UAAN,CAAiBI,OAHhC;AAII,MAAA,WAAW,EAAGL,KAAK,CAACC,UAAN,CAAiBE;AAJnC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KAlBQJ,a;AAkBR;AAyBA;AA8BA;;AAGD,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from 'next/head';\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta\r\n                    name= 'description'\r\n                    content= {props.meetupData.description}\r\n                />\r\n            </Head>\r\n            <MeetupDetail \r\n                image= {props.meetupData.image}\r\n                title= {props.meetupData.title}\r\n                address=  {props.meetupData.address}\r\n                description= {props.meetupData.description}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n\r\n        // blocking - user will not see anything until page was generated\r\n        // and finished page will served\r\n        fallback: 'blocking',       \r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            },\r\n        })),           \r\n    };\r\n};\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data from single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Vaishnavi17:Vaishnavi@17@cluster0.3g0ox.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({\r\n        _id: ObjectId(meetupId),\r\n    });\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description\r\n            },\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}